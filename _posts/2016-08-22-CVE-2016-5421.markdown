---
layout: post
title:  "CVE-2016-5421 Use-after-free vulnerability in libcurl before 7.50.1"
date:   2016-08-19 18:00:00 +0900
categories: vulnerability
toc: true
---

## 概要

libcurlの7.50.1より前のversionにはuse after freeの脆弱性があるため、攻撃者は使用される接続を制御することができるなど、不特定の影響を受ける脆弱性が存在します。

## CVSS v3

|CVSS v3 Base Score|9.8 Critical|
|Vector|CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H|
|Impact Score| 5.9|
|Exploitability Score| 3.9|
|Attack Vector (AV)| Network|
|Attack Complexity (AC)| Low|
|Privileges Required (PR)| None|
|User Interaction (UI)| None|
|Scope (S)| Unchanged|
|Confidentiality (C)| High|
|Integrity (I)| High|
|Availability (A)| High|

## 解決策、緩和策情報

各ベンダが提供するパッチを適用してください。

## 影響を受けるソフトウェアとバージョン

libcurl 7.32.0から7.50.0のバージョンは本脆弱性の影響を受けます。
7.50.1以上のversionからこの脆弱性は修正されています。
この脆弱性は各言語のbindingからも顕在化する可能性があります。
またcurlコマンドラインツールは影響がありません。

## 技術的な詳細

libcurlは_url_easy_init()関数により生成される* CURL型のオブジェクトを利用して単一の接続状態を保持します。
マルチインターフェイスを使用する場合、アプリケーションはマルチハンドルに1つまたはそれ以上のハンドルを追加することにより並行した転送を駆動させることができます。
問題はマルチハンドルに追加された接続構造体のポインタは残すことができるということです 。そのハンドルは適切に閉じられている場合、これは顕著な害をもたらすようには見えません。
しかしながらcurl_easy_peformは盲目的に今解放されたメモリをさす接続構造体のポインタを利用します。
この問題を利用すれば固定されたURLまたはホストに対して固定されたオプションのセットで接続を強制させることができる。

## 不正なアプリケーションのための疑似コード

```
easy = curl_easy_init();
curl_easy_setopt(easy, CURLOPT_URL, "http://example.com/");
// --- start of code to confuse libcurl ---
multi = curl_multi_init();
curl_multi_add_handle(multi, easy);
curl_multi_perform(multi, &still_running);
curl_multi_cleanup(multi);
// --- attack code
allocate_fake_connection_struct()
fill_in_fake_connection_struct()
// ---- end of confusion code
// now this is called, it will not use example.com at all even if the
// option above asks for it...
curl_easy_perform(easy);
```

## 困難性

[パッチ](https://curl.haxx.se/CVE-2016-5421.patch)を見ると、curl_multi_cleanup時にconn->data->easy_connをNULLにする修正。つまり、マルチハンドルに追加されたポインタをNULLにする修正が入っている。
この脆弱性を発現させるためには、curl_multi_add_handleを利用しており、その後、curl_easy_performを利用しているアプリケーションにおいて、curl_multi_cleanupからcurl_easy_performが呼ばれる間にメモリを汚染する必要がある。

## 情報源

 * [CERT](https://www.kb.cert.org/vuls/byid?query=CVE-2016-5421&searchview=)
 * [Debian](https://security-tracker.debian.org/tracker/CVE-2016-5421)
 * [Github](https://github.com/search?q="CVE-2016-5421")
 * [LWN](https://lwn.net/Search/DoSearch?words=CVE-2016-5421)
 * [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5421)
 * [PacketStorm](https://packetstormsecurity.com/search/?q=CVE-2016-5421)
 * [Redhat](https://access.redhat.com/security/cve/CVE-2016-5421)
 * [Ubuntu](https://people.canonical.com/~ubuntu-security/cve/CVE-2016-5421.html)
 * [bugtraq](https://marc.info/?s=CVE-2016-5421&l=bugtraq)
 * [exploitdb](https://www.exploit-db.com/search/?action=search&cve=2016-5421)
 * [fulldisc](https://marc.info/?s=CVE-2016-5421&l=full-disclosure)
 * [metasploit](https://www.rapid7.com/db/search?q=CVE-2016-5421)
 * [oss-sec](https://marc.info/?s=CVE-2016-5421&l=oss-security)

## 参考文献

 * [JVNDB-2016-004391 libcurl における使用される接続を制御される脆弱性](http://jvndb.jvn.jp/ja/contents/2016/JVNDB-2016-004391.html)
 * [use of connection struct after free](https://curl.haxx.se/docs/adv_20160803C.html)
 * [Use After Free 脆弱性攻撃を試す](http://www.slideshare.net/monochrojazz/use-after-free)
 * [Use After Freeとヒープスプレー](http://www.atmarkit.co.jp/ait/articles/1409/22/news010.html)


