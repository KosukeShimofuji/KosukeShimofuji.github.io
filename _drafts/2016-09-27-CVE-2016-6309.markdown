---
layout: post
title:  "CVE-2016-6307 - OpenSSL 1.1.0aにUse After Freeの脆弱性"
date:   2016-09-20 13:00:00 +0900
categories: vlunerability
toc: true
---

# CVE-2016-6309

## 概要

OpenSSL 1.1.0aのstatem/statem.cにはrealloc callの後のメモリブロックの挙動を考慮していないため、攻撃者は悪意のあるTLSセッションの作成を通じて任意のコマンドの実行やDOS攻撃を引き起こすことができます。

## CVSS v3

|CVSS v3 Base Score|5.9 Medium|
|Vector|CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H|
|Impact Score| 3.6|
|Exploitability Score| 2.2|
|Attack Vector (AV)| Network|
|Attack Complexity (AC)| High|
|Privileges Required (PR)| None|
|User Interaction (UI)| None|
|Scope (S)| Unchanged|
|Confidentiality (C)| None|
|Integrity (I)| None|
|Availability (A)| High|

## 解決策、緩和策情報

OpenSSL 1.1.0系を利用している場合、OpenSSL 1.1.0b以降のversionにアップグレードしてください。

## 影響を受けるソフトウェアとバージョン

OpenSSL 1.1.0

## 技術的な詳細

 * [修正コミット](https://git.openssl.org/?p=openssl.git;a=commitdiff;h=acacbfa7565c78d2273c0b2a2e5e803f44afefeb)
 * [テストコード](https://git.openssl.org/?p=openssl.git;a=commitdiff;h=df7681e46825d4a86df5dd73317d88923166a506)

修正されているのはssl/statem/statem.cのread_state_machine関数内の処理です。

```diff
-                    && !BUF_MEM_grow_clean(s->init_buf,
-                                           (int)s->s3->tmp.message_size
-                                           + SSL3_HM_HEADER_LENGTH)) {
+                    && !grow_init_buf(s, s->s3->tmp.message_size
+                                         + SSL3_HM_HEADER_LENGTH)) {
```

BUF_MEM_grow_clean関数の使用からgrow_init_buf関数へと使用へと変更されています。しかしBUF_MEM_grow_clean関数は削除されてわけではなく、新たに追加されたgrow_init_buf関数で呼び出されています。

```diff
+static int grow_init_buf(SSL *s, size_t size) {
+
+    size_t msg_offset = (char *)s->init_msg - s->init_buf->data;
+
+    if (!BUF_MEM_grow_clean(s->init_buf, (int)size))
+        return 0;
+
+    if (size < msg_offset)
+        return 0;
+
+    s->init_msg = s->init_buf->data + msg_offset;
+
+    return 1;
+}
```

```c
size_t BUF_MEM_grow_clean(BUF_MEM *str, size_t len)             
{                                                               
    char *ret;                                                  
    size_t n;                                                   
                                                                
    if (str->length >= len) {                                   
        if (str->data != NULL)                                  
            memset(&str->data[len], 0, str->length - len);      
        str->length = len;                                      
        return (len);                                           
    }                                                           
    if (str->max >= len) {                                      
        memset(&str->data[str->length], 0, len - str->length);  
        str->length = len;                                      
        return (len);                                           
    }                                                           
    /* This limit is sufficient to ensure (len+3)/3*4 < 2**31 */
    if (len > LIMIT_BEFORE_EXPANSION) {                         
        BUFerr(BUF_F_BUF_MEM_GROW_CLEAN, ERR_R_MALLOC_FAILURE); 
        return 0;                                               
    }                                                           
    n = (len + 3) / 3 * 4;                                      
    if ((str->flags & BUF_MEM_FLAG_SECURE))                     
        ret = sec_alloc_realloc(str, n);                        
    else                                                        
        ret = OPENSSL_clear_realloc(str->data, str->max, n);    
    if (ret == NULL) {                                          
        BUFerr(BUF_F_BUF_MEM_GROW_CLEAN, ERR_R_MALLOC_FAILURE); 
        len = 0;                                                
    } else {                                                    
        str->data = ret;                                        
        str->max = n;                                           
        memset(&str->data[str->length], 0, len - str->length);  
        str->length = len;                                      
    }                                                           
    return (len);                                               
}                                                               
```

## 追跡が必要な情報源

 * [CERT](https://www.kb.cert.org/vuls/byid?query=CVE-2016-6309&searchview=)
 * [Debian](https://security-tracker.debian.org/tracker/CVE-2016-6309)
 * [Github](https://github.com/search?q="CVE-2016-6309")
 * [LWN](https://lwn.net/Search/DoSearch?words=CVE-2016-6309)
 * [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-6309)
 * [PacketStorm](https://packetstormsecurity.com/search/?q=CVE-2016-6309)
 * [Redhat](https://access.redhat.com/security/cve/CVE-2016-6309)
 * [Ubuntu](https://people.canonical.com/~ubuntu-security/cve/CVE-2016-6309.html)
 * [bugtraq](https://marc.info/?s=CVE-2016-6309&l=bugtraq)
 * [exploitdb](https://www.exploit-db.com/search/?action=search&cve=2016-6309)
 * [fulldisc](https://marc.info/?s=CVE-2016-6309&l=full-disclosure)
 * [metasploit](https://www.rapid7.com/db/search?q=CVE-2016-6309)
 * [oss-sec](https://marc.info/?s=CVE-2016-6309&l=oss-security)

# 参考文献

 * https://www.openssl.org/news/secadv/20160926.txt
 * http://www.hotfix.jp/archives/word/2007/word07-34.html
 * https://www.ibm.com/developerworks/jp/linux/library/l-openssl/

