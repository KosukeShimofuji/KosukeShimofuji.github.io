---
layout: post
title:  "CVE-2016-2776 - BIND 9.xの脆弱性（DNSサービスの停止）"
date:   2016-09-29 15:00:00 +0900
categories: vlunerability
toc: true
---

# CVE-2016-2776

## 概要

以下JPRSの[アドバイザリ](https://jprs.jp/tech/security/2016-09-28-bind9-vuln-rendering.html)より抜粋

```
BIND 9.xにはDNS応答を作成する処理に不具合があり、特定の問い合わせに
対応する応答メッセージをパケットに構築する際、namedが異常終了を起こ
す障害が発生します（*1）。

（*1）本脆弱性によりnamedが異常終了した場合、buffer.cにおいて
      assertion failureを引き起こした旨のメッセージがログに出力され
      ます。

本脆弱性により、DNSサービスの停止が発生する可能性があります。また、
本脆弱性を利用した攻撃はリモートから可能です。
```

## CVSS v3

|CVSS v3 Base Score|7.5 High|
|Vector|CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H|
|Impact Score| 3.6|
|Exploitability Score| 3.9|
|Attack Vector (AV)| Network|
|Attack Complexity (AC)| Low|
|Privileges Required (PR)| None|
|User Interaction (UI)| None|
|Scope (S)| Unchanged|
|Confidentiality (C)| None|
|Integrity (I)| None|
|Availability (A)| High|

## 解決策、緩和策情報

BIND 9.10.4-P3/9.9.9-P3へのアップグレードを行ってください。
なお、ISCでは9.8以前の系列のBIND 9のサポートを終了しており、これらの バージョンに対するセキュリティパッチはリリースしないと発表しています。

## 影響を受けるソフトウェアとバージョン

 * 9.11系列：9.11.0a1～9.11.0rc1
 * 9.10系列：9.10.0～9.10.4-P2
 * 9.9系列：9.9.0～9.9.9-P2
 * 上記以外の系列：9.0.x～9.8.x

## 技術的な詳細

### パッチ内容を確認する

ここではすべての修正を列挙することはせずに重要だと思われるコードについてのみ抜粋する。

 * 脆弱なパッケージと修正済みパッケージをダウンロードする

```
$ wget https://ftp.isc.org/isc/bind9/9.10.4-P2/bind-9.10.4-P2.tar.gz
$ wget https://ftp.isc.org/isc/bind9/9.10.4-P3/bind-9.10.4-P3.tar.gz
```

 * 差分を閲覧する

```
$ diff -ur bind-9.10.4-P2 bind-9.10.4-P3
```

 * CHANGESの差分

P3のセキュリティパッチには2つのissueが含まれていることがわかる。

```
--- bind-9.10.4-P2/CHANGES      2016-07-14 08:58:03.000000000 +0900
+++ bind-9.10.4-P3/CHANGES      2016-09-14 10:23:44.000000000 +0900
@@ -1,3 +1,15 @@
+       --- 9.10.4-P3 released ---
+
+4468.  [bug]           Address ECS option handling issues. [RT #43191]
+
+                       Note: Only the parts required to restore
+                       interoperation with ECS clients have been
+                       included in this security release.  The full
+                       fix is included in BIND 9.10.5.
+
+4467.  [security]      It was possible to trigger a assertion when rendering
+                       a message. (CVE-2016-2776) [RT #43139]
+
```

 * message.c

```diff
diff -ur bind-9.10.4-P2/lib/dns/message.c bind-9.10.4-P3/lib/dns/message.c
--- bind-9.10.4-P2/lib/dns/message.c    2016-07-14 08:58:03.000000000 +0900
+++ bind-9.10.4-P3/lib/dns/message.c    2016-09-14 10:23:44.000000000 +0900
@@ -1728,7 +1728,7 @@
        if (r.length < DNS_MESSAGE_HEADERLEN)
                return (ISC_R_NOSPACE);

-       if (r.length < msg->reserved)
+       if (r.length - DNS_MESSAGE_HEADERLEN < msg->reserved)
                return (ISC_R_NOSPACE);

        /*
@@ -1869,8 +1869,29 @@

        return (ISC_TRUE);
 }
-
 #endif
+
+static isc_result_t
+renderset(dns_rdataset_t *rdataset, dns_name_t *owner_name,
+         dns_compress_t *cctx, isc_buffer_t *target,
+         unsigned int reserved, unsigned int options, unsigned int *countp)
+{
+       isc_result_t result;
+
+       /*
+        * Shrink the space in the buffer by the reserved amount.
+        */
+       if (target->length - target->used < reserved)
+               return (ISC_R_NOSPACE);
+
+       target->length -= reserved;
+       result = dns_rdataset_towire(rdataset, owner_name,
+                                    cctx, target, options, countp);
+       target->length += reserved;
+
+       return (result);
+}
+
 isc_result_t
 dns_message_rendersection(dns_message_t *msg, dns_section_t sectionid,
                          unsigned int options)
@@ -1913,6 +1934,8 @@
        /*
         * Shrink the space in the buffer by the reserved amount.
         */
+       if (msg->buffer->length - msg->buffer->used < msg->reserved)
+               return (ISC_R_NOSPACE);
        msg->buffer->length -= msg->reserved;

        total = 0;
@@ -2188,9 +2211,8 @@
                 * Render.
                 */
                count = 0;
-               result = dns_rdataset_towire(msg->opt, dns_rootname,
-                                            msg->cctx, msg->buffer, 0,
-                                            &count);
+               result = renderset(msg->opt, dns_rootname, msg->cctx,
+                                  msg->buffer, msg->reserved, 0, &count);
                msg->counts[DNS_SECTION_ADDITIONAL] += count;
                if (result != ISC_R_SUCCESS)
                        return (result);
@@ -2206,9 +2228,8 @@
                if (result != ISC_R_SUCCESS)
                        return (result);
                count = 0;
-               result = dns_rdataset_towire(msg->tsig, msg->tsigname,
-                                            msg->cctx, msg->buffer, 0,
-                                            &count);
+               result = renderset(msg->tsig, msg->tsigname, msg->cctx,
+                                  msg->buffer, msg->reserved, 0, &count);
                msg->counts[DNS_SECTION_ADDITIONAL] += count;
                if (result != ISC_R_SUCCESS)
                        return (result);
@@ -2229,9 +2250,8 @@
                 * the owner name of a SIG(0) is irrelevant, and will not
                 * be set in a message being rendered.
                 */
-               result = dns_rdataset_towire(msg->sig0, dns_rootname,
-                                            msg->cctx, msg->buffer, 0,
-                                            &count);
+               result = renderset(msg->sig0, dns_rootname, msg->cctx,
+                                  msg->buffer, msg->reserved, 0, &count);
                msg->counts[DNS_SECTION_ADDITIONAL] += count;
                if (result != ISC_R_SUCCESS)
                        return (result);

```

 * opt_41.c

```diff
diff -ur bind-9.10.4-P2/lib/dns/rdata/generic/opt_41.c bind-9.10.4-P3/lib/dns/rdata/generic/opt_41.c
--- bind-9.10.4-P2/lib/dns/rdata/generic/opt_41.c       2016-07-14 08:58:03.000000000 +0900
+++ bind-9.10.4-P3/lib/dns/rdata/generic/opt_41.c       2016-09-14 10:23:44.000000000 +0900
@@ -134,9 +134,6 @@
                        scope = uint8_fromregion(&sregion);
                        isc_region_consume(&sregion, 1);

-                       if (addrlen == 0U && family != 0U)
-                               return (DNS_R_OPTERR);
-
                        switch (family) {
                        case 0:
                                /*
```

 * rdata_test.c

```diff
diff -ur bind-9.10.4-P2/lib/dns/tests/rdata_test.c bind-9.10.4-P3/lib/dns/tests/rdata_test.c
--- bind-9.10.4-P2/lib/dns/tests/rdata_test.c   2016-07-14 08:58:03.000000000 +0900
+++ bind-9.10.4-P3/lib/dns/tests/rdata_test.c   2016-09-14 10:23:44.000000000 +0900
@@ -105,7 +105,7 @@
                          0x00, 0x08, 0x00, 0x04,
                          0x00, 0x01, 0x00, 0x00
                        },
-                       8, ISC_FALSE
+                       8, ISC_TRUE
                },
                {
                        /* Option code family 2 (ipv6) , source 0, scope 0 */
@@ -113,7 +113,7 @@
                          0x00, 0x08, 0x00, 0x04,
                          0x00, 0x02, 0x00, 0x00
                        },
-                       8, ISC_FALSE
+                       8, ISC_TRUE
                },
                {
                        /* extra octet */
```

### 脆弱性を発現させるトリガーを特定する 

本脆弱性を突かれた場合、buffer.cにおいてassertion failureを引き起こした旨のメッセージがログに出力されるとのことなので、buffer.cを眺めてみる。

![buffer_function]({{site.baseurl}}/images/2016/09/29/buffer_function.png)

最終的にこれらの関数のいづれかからassertを発生させることができると推測する。
主に修正されているのはmessage.cのdns_rdataset_towire関数関連の処理である。
dns_rdastaset_towire関数はmessage.cのdns_message_renderend関数内で呼ばれているが、セキュリティパッチによりこれらの呼び出しは全て新たに追加されたrenderset関数に置き換えられている。

```c
static isc_result_t
renderset(dns_rdataset_t *rdataset, dns_name_t *owner_name,
         dns_compress_t *cctx, isc_buffer_t *target,
         unsigned int reserved, unsigned int options, unsigned int *countp)
{
       isc_result_t result;

       /*
        * Shrink the space in the buffer by the reserved amount.
        */
       if (target->length - target->used < reserved)
               return (ISC_R_NOSPACE);

       target->length -= reserved;
       result = dns_rdataset_towire(rdataset, owner_name,
                                    cctx, target, options, countp);
       target->length += reserved;

       return (result);
}
```

新たに追加されたrenderset関数は予約量によりスペースを縮小する処理が入っている。この予約量によりスペースを縮小する処理はセキュリティパッチに複数箇所追加されている。

```diff
@@ -1728,7 +1728,7 @@
        if (r.length < DNS_MESSAGE_HEADERLEN)
                return (ISC_R_NOSPACE);

-       if (r.length < msg->reserved)
+       if (r.length - DNS_MESSAGE_HEADERLEN < msg->reserved)
```

```diff
@@ -1913,6 +1934,8 @@
        /*
         * Shrink the space in the buffer by the reserved amount.
         */
+       if (msg->buffer->length - msg->buffer->used < msg->reserved)
+               return (ISC_R_NOSPACE);
```



### 脆弱な環境の構築

 * bind-9.10.4-P2をビルドする

```
# apt-get install libssl-dev
# wget https://ftp.isc.org/isc/bind9/9.10.4-P2/bind-9.10.4-P2.tar.gz
# ./configure --prefix=/usr --sysconfdir=/etc/ --enable-threads --localstatedir=/var/state --with-libtool --with-openssl
# make
# make intsall
# ldconfig -v 
# groupadd named
# useradd -d /var/named -g named -s /bin/false named
# vigr (daemonグループにnamedを追加する)
# chown root:daemon /var/run
# chmod 775 /var/run
# mkdir -p /var/named/pz
# chown -R named:named /var/named
# chmod -R 755 /var/named
# wget -O /var/named/db.root http://www.internic.net/domain/named.root
# wget -O /var/named/root.hints http://www.internic.net/domain/named.root
```

 * /var/named/pz/127.0.0ファイルを作成

```
# cat > /var/named/pz/127.0.0
$TTL 1D

@           1D IN SOA   localhost. root.localhost. (
                    42      ; serial (d. adams)
                    3H      ; refresh
                    15M     ; retry
                    1W      ; expiry
                    1D )        ; minimum

            1D IN NS    localhost.
1           1D IN PTR   localhost.
```

 * /var/named/pz/127.0.0のシンボリックリンクをvar/named/pz/192.168.1に貼る

```
# ln -s /var/named/pz/127.0.0 /var/named/pz/192.168.1
```

 * リゾルバをbindに向ける

```
# echo "nameserver 127.0.0.1" > /etc/resolv.conf
```

 * rncd関連の設定

```
# rndc-confgen -a -b 512 -u named -r /dev/urandom
# cat /etc/rndc.key
key "rndc-key" {
        algorithm hmac-md5;
        secret "3sauHWKuPD9SS7yAATsWWzZYW19+xbo7mprXuoan4PXrsTxaPFcEls5Do2cw03K46Ugr9Ha2+HexHUQPpvws6Q==";
};
```

 * rndc.confの作成

rndc-keyディレクティブの値はrndc.keyの値と合わせる。

```
# cat > /etc/rndc.conf
   // this file is used by the rndc utility
        options {
        // what host should rndc attempt to control by default
            default-server localhost;
        // and what key should it use to communicate with named
            default-key "rndc-key";
        };

        server localhost {
        // always use this key with this host
            key "rndc-key";
        };

        key "rndc-key" {
            algorithm hmac-md5;
            secret "3sauHWKuPD9SS7yAATsWWzZYW19+xbo7mprXuoan4PXrsTxaPFcEls5Do2cw03K46Ugr9Ha2+HexHUQPpvws6Q==";
        };

        // secret was generated by running mmencode on command line
        // and then entering a secret phrase
```

 * etc/named.confの作成　

rndc-keyディレクティブの値はrndc.keyの値と合わせる。

```
# cat > /etc/named.conf

   // This is a configuration file for named (from BIND 9.0 or later).
        // It would normally be installed as /etc/named.conf.
        //
        // Changed to match secure example from LASG 5/17/00
        // Changed to match Linux Journal example 9/17/00
        // Added new "view' sections to stop fingerprinting of Bind 9.x per
        // Bugtraq 1/31/00
        // Added rndc key stuff per DNS & Bind (Rev. 4) Chapter 11
        // added use-id-pool and more comments based on above chapter

             options {
            // Directory where bind should create files if
            // not explicitly stated
            directory "/var/named";

            // whom do we allow to do zone tranfers
            allow-transfer { 192.168.10.0/24; };

            // new in Bind 9.x to allow RFC1886 -> RFC2874 conversion
            // to support IPv6
            // allow-v6-synthesis { 192.168.1.10; };
            // OBSOLETED in 9.3.0 + !!

            // tell Bind to check the names in zone files
            // since it no longer does this by default
            // (unimplemented 9.3.0+)
            check-names master warn;

            // sets the size of something or other to 20Mb ;)
            datasize 20M;

            // sets the size of the journal to 5Mb
            max-journal-size 5M;

            // Bind 9.x doesn't recognize this yet :(
            // deallocate-on-exit no;

            // where should Bind put a dump of its cache
            // if told to dump it
            dump-file "named_dump.db";

            // how often should bind check for new
            // interfaces toi listen on. we turn
            // this off by setting it to 0
            interface-interval 0;

            // specify what interfaces/ips to listen on
            // as the default is all of them
            listen-on { 192.168.10.102; };

            // define a mximum size of cached records
            // new in Bind 9.x
            max-cache-size 20M;

            // where to right stats of memory usage
            // Bind 9.x doesn't recognize this yet :(
            memstatistics-file "named.memstats";

            // where to put out pid file
            // absolute path since we don't want
            // it in /var/named
            pid-file "/var/run/named.pid";

            // force Bind to use port 53 for its
            // network operation to other DNS
            // servers (Bind 9 uses high ports
            // by default). Makes firewalling easier
            query-source address * port 53;
            transfer-source * port 53;
            notify-source * port 53;

            // where to dump Bind server stats
            statistics-file "named.stats";

            // force Bind to be "more" random in assiging
            // message ids
            use-id-pool yes;

            // If the chaos view below doesn't work
            // for some reason, still give out a bogus
            // answer for Bind version requests
            version "This is not the port you're looking for.";

            // keep stats on a zone basis
            zone-statistics yes;
             };

             controls { 
            // this allows rndc to be used from the localhost
            // to talk to bind on the loopback interface
            // using the key defined as 'rndc-key'
            inet 127.0.0.1 allow { localhost; } keys { rndc-key; };
             };

             // the rest of the key configuration is in
             // /etc/rndc.conf and the key itself is in
             // /etc/rndc.key
             key "rndc-key" {
            // how was key encoded
            algorithm hmac-md5;
            // what is the pass-phrase for the key
            secret "3sauHWKuPD9SS7yAATsWWzZYW19+xbo7mprXuoan4PXrsTxaPFcEls5Do2cw03K46Ugr9Ha2+HexHUQPpvws6Q==";
             };

             logging {
            channel named_info {
                // log to syslog instead of a file
                syslog;
                // include the category of the event in the log
                print-category yes;
                // include the severity of the event in the log
                print-severity yes;
                // include the time of the event in the log
                print-time yes;
            };

            // Processing of client requests
            category client { named_info; };

            // named.conf parsing and processing
            category config { named_info; };

            // Messages relating to internal memory structures
            category database { named_info; };

            // This is the default for any category not specifically defined
            category default { named_info; };

            // The catch-all. Anything without a category of its own
            category general { named_info; };

            // Uncomment if you dont want to know about lame server.
            // Leave commented and it defaults to the
            // value of default above
            // category lame-servers { null; };

            // The NOTIFY protocol
            category notify { named_info; };

            // Network operations
            category network { named_info; };

            // DNS resolution like recursive lookups, etc..
            category resolver { named_info; };

            // Approval and denial of requests
            category security { named_info; };

            // Dynamic updates
            category update { named_info; };

            // Queries. Duh.
            category queries { named_info; };

            // Zone transfers received
            category xfer-in { named_info; };

            // Zone transfers sent
            category xfer-out { named_info; };
            };

            // this is where we define different versions
            // of our zones based on where the client is
            // coming from.
            // the first view that matches a client is
            // the one that gets used, so order can be
            // important
            view "external-chaos" chaos {
                // you could use 'any' or even 'localnets' here
                // instead of specifying each IP range
                // however, it should be noted that 'localnets'
                // means ANY network Bind is directly connected
                // to which might include your ISP
                match-clients { 192.168.1.0/24; 127/8; };
                recursion no;
                zone "." {
                    type hint;
                    // this causes a null response to queries
                    // about the Bind version
                    file "/dev/null";
                };
            };
    
            view "external" {
                // you could use 'any' or even 'localnets' here
                // instead of specifying each IP range
                // however, it should be noted that 'localnets'
                // means ANY network Bind is directly connected
                // to which might include your ISP
                match-clients { 192.168.1.0/24; 127/8; };
                zone "." {
                    type hint;
                    file "root.hints";
                };
            };
    
            view "external-127" {
                // you could use 'any' or even 'localnets' here
                // instead of specifying each IP range
                // however, it should be noted that 'localnets'
                // means ANY network Bind is directly connected
                // to which might include your ISP
                match-clients { 192.168.1.0/24; 127/8; };
                zone "0.0.127.in-addr.arpa" {
                    type master;
                    file "pz/127.0.0";
                    allow-update {
                        none;
                    };
                };
            };
    
            view "external-192" {
                // you could use 'any' or even 'localnets' here
                // instead of specifying each IP range
                // however, it should be noted that 'localnets'
                // means ANY network Bind is directly connected
                // to which might include your ISP
                match-clients { 192.168.1.0/24; 127/8; };
                zone "1.168.192.in-addr.arpa" {
                    type master;
                    file "pz/192.168.1";
                    allow-update {
                        none;
                    };
                };
            };
```

 * namedの起動

```
# /usr/sbin/named -u named
# netstat -lnp | grep named
tcp        0      0 127.0.0.1:53            0.0.0.0:*               LISTEN      6075/named
tcp        0      0 127.0.0.1:953           0.0.0.0:*               LISTEN      6075/named
tcp6       0      0 :::53                   :::*                    LISTEN      6075/named
udp        0      0 0.0.0.0:53              0.0.0.0:*                           6075/named
udp        0      0 127.0.0.1:53            0.0.0.0:*                           6075/named
udp6       0      0 :::53                   :::*                                6075/named
```

 * namedのテスト

```
# dig @127.0.0.1 -x 8.8.8.8 +short
google-public-dns-a.google.com.
```

## 問題箇所を通るパケットを調査する

以下の修正はdns_message_renderbegin関数内で行われている。まずdns_message_renderbegin関数内に入るオペレーションを探る。

```diff
diff -ur bind-9.10.4-P2/lib/dns/message.c bind-9.10.4-P3/lib/dns/message.c
--- bind-9.10.4-P2/lib/dns/message.c    2016-07-14 08:58:03.000000000 +0900
+++ bind-9.10.4-P3/lib/dns/message.c    2016-09-14 10:23:44.000000000 +0900
@@ -1728,7 +1728,7 @@
        if (r.length < DNS_MESSAGE_HEADERLEN)
                return (ISC_R_NOSPACE);

-       if (r.length < msg->reserved)
+       if (r.length - DNS_MESSAGE_HEADERLEN < msg->reserved)
                return (ISC_R_NOSPACE);

        /*
@@ -1869,8 +1869,29 @@
```


## dns_message_renderbeginに着目した調査

```c
isc_result_t                                                            
dns_message_renderbegin(dns_message_t *msg, dns_compress_t *cctx,       
                        isc_buffer_t *buffer)                           
{                                                                       
        isc_region_t r;                                                 
                                                                        
        REQUIRE(DNS_MESSAGE_VALID(msg));                                
        REQUIRE(buffer != NULL);                                        
        REQUIRE(msg->buffer == NULL);                                   
        REQUIRE(msg->from_to_wire == DNS_MESSAGE_INTENTRENDER);         
                                                                        
        msg->cctx = cctx;                                               
                                                                        
        /*                                                              
         * Erase the contents of this buffer.                           
         */                                                             
        isc_buffer_clear(buffer);                                       
                                                                        
        /*                                                              
         * Make certain there is enough for at least the header in this 
         * buffer.                                                      
         */                                                             
        isc_buffer_availableregion(buffer, &r);                         
        if (r.length < DNS_MESSAGE_HEADERLEN)                           
                return (ISC_R_NOSPACE);                                 
                                                                        
-        if (r.length < msg->reserved)                                   
+        if (r.length - DNS_MESSAGE_HEADERLEN < msg->reserved)
                return (ISC_R_NOSPACE);                                 
                                                                        
        /*                                                              
         * Reserve enough space for the header in this buffer.          
         */                                                             
        isc_buffer_add(buffer, DNS_MESSAGE_HEADERLEN);                  
                                                                        
        msg->buffer = buffer;                                           
                                                                        
        return (ISC_R_SUCCESS);                                         
}                                                                       
```

r.lengthからDNS_MESSAGE_HEADERLENを引いたものよりmsg->reservedメンバ変数が小さいならISC_R_NOSPACEを返すように修正されている。ISC_R_NOSPACEを返すことができるならDOSが成立するのかという疑問を調査するため、強制的にISC_R_NOSPACEを返すようにソースを修正してビルドする。


```
        return (ISC_R_NOSPACE); 
```

ビルドした状態でdigコマンドを使用すると以下のようなメッセージを得た。

```
root@scapegoat:/home/kosuke/bind-9.10.2-P2# dig @127.0.0.1 -x 8.8.8.8 +short
dig: dns_message_renderbegin: ran out of space
```

しかしbindが落ちるようなことはなかった。この時どのようなstack traceを辿ったのかを調べる。

```
# gdb -q /usr/sbin/named
```

 * dns_message_renderbeginの呼び出しを調べる

fore groundでnamedを起動させてgdbでデバッグする。

```
# file /usr/sbin/named
/usr/sbin/named: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=dee19b8e2f0725ec245d9223f5123d70b564a72c, not stripped
# gdb -q /usr/sbin/named
Reading symbols from /usr/sbin/named...done.
(gdb) set disassembly-flavor intel
(gdb) b dns_message_renderbegin
Breakpoint 1 at 0x413db0
(gdb) run -u named -f
Starting program: /usr/sbin/named -u named -f
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[New Thread 0x7ffff5b37700 (LWP 11875)]
[New Thread 0x7ffff5336700 (LWP 11876)]
[New Thread 0x7ffff4b35700 (LWP 11877)]
where
[Switching to Thread 0x7ffff5b37700 (LWP 11875)]

Breakpoint 1, dns_message_renderbegin (msg=0x7fffefbb3010, cctx=0x7ffff5b36850, buffer=0x7fffefbb6078) at message.c:1708
warning: Source file is more recent than executable.
1708    {
(gdb) where
#0  dns_message_renderbegin (msg=0x7fffefbb3010, cctx=0x7ffff5b36850, buffer=0x7fffefbb6078) at message.c:1708
#1  0x00007ffff78d9a40 in resquery_send (query=0x7fffefbb6010) at resolver.c:1977
#2  0x00007ffff78e3d40 in fctx_query (fctx=0x7fffefbaf010, addrinfo=<optimized out>, options=<optimized out>) at resolver.c:1626
#3  0x00007ffff78e40d4 in fctx_try (fctx=0x7fffefbaf010, retrying=isc_boolean_false, badcache=(unknown: 4026045432)) at resolver.c:3392
#4  0x00007ffff78e4830 in fctx_start (task=0x7fffefbb3010, event=0x7fffefbaf0a8) at resolver.c:3737
#5  0x00007ffff6b6fbbf in dispatch (manager=0x7ffff7fae010) at task.c:1122
#6  run (uap=0x7ffff7fae010) at task.c:1294
#7  0x00007ffff67220a4 in start_thread (arg=0x7ffff5b37700) at pthread_create.c:309
#8  0x00007ffff645762d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111
```

上記結果は以下のコマンドでパケットを生成させた時のものである。

```
# dig @127.0.0.1 -x 8.8.8.8 +short
```

resquery_sendにISC_R_NOSPACEが返った時の挙動を調査する

 * resolver.c:6654

```
                                 if (result == ISC_R_NOSPACE) {    
                                         /*                        
                                          * We can't construct the 
                                          * DNAME target.  Do not  
                                          * try to continue.       
                                          */                       
                                         want_chaining = ISC_FALSE;
                                         POST(want_chaining);      
```

## namedの主な動きを理解する

 * bin/named/main.cのmainがエントリポイント
 * main.cのsetup()に移動する
 * main.cのcreate_manegers()に移動する
 * isc_taskmgr_create, isc_timermgr_create, isc_socketmgr_create2でそれぞれスレッドが生成される
```
(gdb) info thread
  Id   Target Id         Frame
  4    Thread 0x7ffff4b35700 (LWP 27530) "named" 0x00007ffff6457c03 in epoll_wait () at ../sysdeps/unix/syscall-template.S:81
  3    Thread 0x7ffff5336700 (LWP 27529) "named" pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185
  2    Thread 0x7ffff5b37700 (LWP 27528) "named" pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185
* 1    Thread 0x7ffff7feb700 (LWP 27523) "named" ns_builtin_init () at builtin.c:559
```

## Metasploit Framework

### auxiliary module

## Exploit





## 追跡が必要な情報源

 * [CERT](https://www.kb.cert.org/vuls/byid?query=CVE-2016-2776&searchview=)
 * [Debian](https://security-tracker.debian.org/tracker/CVE-2016-2776)
 * [Github](https://github.com/search?q="CVE-2016-2776")
 * [LWN](https://lwn.net/Search/DoSearch?words=CVE-2016-2776)
 * [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2776)
 * [PacketStorm](https://packetstormsecurity.com/search/?q=CVE-2016-2776)
 * [Redhat](https://access.redhat.com/security/cve/CVE-2016-2776)
 * [Ubuntu](https://people.canonical.com/~ubuntu-security/cve/CVE-2016-2776.html)
 * [bugtraq](https://marc.info/?s=CVE-2016-2776&l=bugtraq)
 * [bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-2776)
 * [exploitdb](https://www.exploit-db.com/search/?action=search&cve=2016-2776)
 * [fulldisc](https://marc.info/?s=CVE-2016-2776&l=full-disclosure)
 * [metasploit](https://www.rapid7.com/db/search?q=CVE-2016-2776)
 * [oss-sec](https://marc.info/?s=CVE-2016-2776&l=oss-security)

# 参考文献

 * https://jprs.jp/tech/security/2016-09-28-bind9-vuln-rendering.html
 * https://kb.isc.org/article/AA-01419
 * https://github.com/rapid7/metasploit-framework/pull/7382
 * http://blog.infobytesec.com/2016/10/a-tale-of-dns-packet-cve-2016-2776.html
 * https://github.com/infobyte/CVE-2016-2776/blob/master/namedown.py

