---
layout: post
title:  "CVE-2016-5734 phpMyAdminに任意のコマンドの実行が可能な脆弱性"
date:   2016-07-06 18:00:00 +0900
categories: vlunnerability
toc: true
---

## 概要

phpMyAdminの4.0系の4.0.10.16未満、4.4系の4.4.15.7未満、4.6系の4.6.3未満のバージョンにはpreg_replaceの[デリミタ](http://php.net/manual/ja/regexp.reference.delimiters.php)を適切に選択しないため、攻撃者はリモートから任意のコマンドのPHPコードを注入することができます。これはテーブルの検索と置換の実装に起因します。

## CVSS v3

|CVSS v3 Base Score|9.8 Critical|
|Vector|CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H|
|Impact Score| 5.9|
|Exploitability Score| 3.9|
|Attack Vector (AV)| Network|
|Attack Complexity (AC)| Low|
|Privileges Required (PR)| None|
|User Interaction (UI)| None|
|Scope (S)| Unchanged|
|Confidentiality (C)| High|
|Integrity (I)| High|
|Availability (A)| High|

## 解決策、緩和策情報

phpMyAdminのバージョンを4.6.3, 4.4.15.7, 4.0.10.16以上にアップグレードするか、以下のパッチを適用してください。

 * 4.0系
   * [351019c](https://github.com/phpmyadmin/phpmyadmin/commit/351019c)
 * 4.4系
   * [33d1373](https://github.com/phpmyadmin/phpmyadmin/commit/33d1373)
   * [daf3751](https://github.com/phpmyadmin/phpmyadmin/commit/daf3751)
 * 4.6系
   * [4bcc606](https://github.com/phpmyadmin/phpmyadmin/commit/4bcc606)
   * [1cc7466](https://github.com/phpmyadmin/phpmyadmin/commit/1cc7466)

## 影響を受けるphpMyAdminのバージョン

 * 4.0系
   * 4.0.10.15
   * 4.0.9
   * 4.0.8
   * 4.0.7
   * 4.0.6
   * 4.0.5
   * 4.0.4.2
   * 4.0.4.1
   * 4.0.4
   * 4.0.3
   * 4.0.2
   * 4.0.10.9
   * 4.0.10.8
   * 4.0.10.7
   * 4.0.10.6
   * 4.0.10.5
   * 4.0.10.4
   * 4.0.10.3
   * 4.0.10.2
   * 4.0.10.14
   * 4.0.10.13
   * 4.0.10.12
   * 4.0.10.11
   * 4.0.10.10
   * 4.0.10.1
   * 4.0.10
   * 4.0.1
   * 4.0.0
 * 4.4系
   * 4.4.15.6
   * 4.4.15.5
   * 4.4.9
   * 4.4.8
   * 4.4.7
   * 4.4.6.1
   * 4.4.6
   * 4.4.5
   * 4.4.4
   * 4.4.3
   * 4.4.2
   * 4.4.15.4
   * 4.4.15.3
   * 4.4.15.2
   * 4.4.15.1
   * 4.4.15
   * 4.4.14.1
   * 4.4.13.1
   * 4.4.13
   * 4.4.12
   * 4.4.11
   * 4.4.10
   * 4.4.1.1
   * 4.4.1
   * 4.4.0
 * 4.6系
   * 4.6.0:rc2
   * 4.6.0:rc1
   * 4.6.0:alpha1
   * 4.6.2
   * 4.6.1
   * 4.6.0

## 技術的な詳細

### 前提知識

evalのような文字列を再評価処理を行う関数に外部から汚染可能な値を渡すと任意のコマンドの実行が可能な脆弱性ができてしまいます。

 * 外部入力を無害化することなしに再評価処理する脆弱なスクリプト

```php
<?php
eva($_GET['input']);
?>
```

 * 任意のコマンドの実行が可能

```bash
$ curl -X GET "http://vlun.test/test.php?input=system('hostname');"
vlun.test
```

再評価といえばevalですが、正規表現と置換処理を担うpreg_replace関数もeオプションを使用することで文字列再評価を行う機能を持っています。この機能はphp 5.5.0で非推奨の機能となり、php 7.0.0で使えなくなっています。またphp 5.5.0以降ではE_DEPRECATEDの例外が発生し、PHP 7.0.0以降ではE_WARNINGの例外が発生します。また、php 5.4.6まではpreg_replaceにNULL終端攻撃を実行することが可能です。

 * 外部入力を無害化することなしに再評価処理する脆弱なスクリプト

```php
<?php
preg_replace('/.*/e', $_GET['input'], '')
?>
```

 * 任意のコマンドの実行が可能

```bash
$ curl -X GET "http://vlun.test/test.php?input=system('hostname');"
vlun.test
```

次は本件の脆弱性で問題になっている[デリミタ](http://php.net/manual/ja/regexp.reference.delimiters.php)に着目してpreg_replaceの再評価処理をみていきましょう。

 * 正規表現パターンと置き換え文字列を外部入力から渡す

```php
<?php
preg_replace($_GET['input1'], $_GET['input2'], '')
?>
```

 * 任意のコマンドの実行が可能

```bash
$ curl -X GET "http://vlun.test/test.php?input1=/.*/e&input2=system('uname+-a');"
Linux vlun.test 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt25-2+deb8u3 (2016-07-02) x86_64 GNU/Linux
```

正規表現の完全なパターン渡して任意のコマンドの実行を起こすことが可能なのがわかりました。
次に一部だけ正規表現が定義されている場合をみてみましょう。

 * デリミタを@で設定し、前半のデリミタだけを指定する

```php
<?php
preg_replace('@' . $_GET['input1'], $_GET['input2'], '')
?>
```

 * 後半のデリミタとeオプションを設定して、任意のコマンドの実行を行う

```bash
$ curl -X GET "http://vlun.test/test.php?input1=.*@e&input2=system('uname+-a');"
Linux vlun.test 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt25-2+deb8u3 (2016-07-02)
x86_64 GNU/Linux
```

### 検証環境構築

phpMyAdminの4.0.10.15を検証対象として、検証環境を構築します。
apacheとphpとmysqlを事前に導入しておき、以下のオペレーションでphpMyAdminをApacheからアクセスできるように設定します。

```bash
$ wget https://files.phpmyadmin.net/phpMyAdmin/4.0.10.15/phpMyAdmin-4.0.10.15-all-languages.tar.gz
$ tar zxvf phpMyAdmin-4.0.10.15-all-languages.tar.gz
$ sudo mkdir /var/phpmyadmin
$ sudo cp -r phpMyAdmin-4.0.10.15-all-languages/* /var/phpmyadmin
$ mkdir /var/phpmyadmin/config
$ cp /var/phpmyadmin/config.sample.inc.php /var/phpmyadmin/config.php
$ sudo chown -R www-data:www-data /var/phpmyadmin
$ sudo cat > /etc/apache2/sites-available/phpmyadmin.conf
<VirtualHost *:80>
   ServerAdmin admin@vlun.test
   ServerName vlun.test
   DocumentRoot /var/phpmyadmin/

   <Directory "/var/phpmyadmin/">
      Options ExecCGI FollowSymlinks
      AllowOverride All
      Require all granted
   </Directory>

   ErrorLog /var/log/apache2/error-vlun.test.log
   LogLevel warn

   CustomLog /var/log/apache2/access-vlun.test.log combined
   ServerSignature On
</VirtualHost>
$ sudo service apache2 reload
```

phpMyAdminが稼働したら、http://vhost/setupにアクセスして、MySQLサーバの設定を行います。

![phpmyadmin_setup]({{site.baseurl}}/images/2016/07/13/phpmyadmin_setup.png)

サーバの設定がうまくいけば、ログイン画面からMySQLのアカウントを入力すればログインできるようになります。

![phpmyadmin_login]({{site.baseurl}}/images/2016/07/13/phpmyadmin_login.png)

検証のデータベースとテーブルも作成しておきます。

```sql
CREATE DATABASE vlun_test;
CREATE TABLE vlun_test.test(id int, msg varchar(20));
INSERT INTO vlun_test.test (id, msg) values(1, 'AAA');
INSERT INTO vlun_test.test (id, msg) values(2, 'BBB');
INSERT INTO vlun_test.test (id, msg) values(3, 'CCC');
```

以下のようなテーブルとレコードが作成されます。

```
mysql> select * from vlun_test.test;
+------+------+
| id   | msg  |
+------+------+
|    1 | AAA  |
|    2 | BBB  |
|    3 | CCC  |
+------+------+
3 rows in set (0.00 sec)
```

### 技術的な調査

検証環境はphpMyAdmin4.0.10.15なので、[351019c](https://github.com/phpmyadmin/phpmyadmin/commit/351019c)で修正された脆弱性が存在します。
修正されているのはlibraries/tbl_columns_definition_form.inc.phpの695行目です。同じソースファイルの中にpreg_replaceを使用している箇所は以下ですが、ここはコメントアウトされていました。

```bash
$ grep -n 'preg_replace' libraries/tbl_columns_definition_form.inc.php
814:    var new_field = '<?php echo preg_replace('|\s+|', ' ', preg_replace('|\'|', '\\\'', $new_field)); ?>';
```

tbl_columns_definition_form.inc.phpを呼んでいるコードが存在し、その中にpreg_replaceを呼んでいる処理があるのだと推測しました。

 * tbl_column_defintion_form.inc.phpをrequireしているソース

```bash
$ grep -r -n 'tbl_columns_definition_form.inc.php' * | egrep -v '^tags'
libraries/structure.lib.php:2285:    include 'libraries/tbl_columns_definition_form.inc.php';
tbl_addfield.php:247:    include_once 'libraries/tbl_columns_definition_form.inc.php';
tbl_create.php:445:require 'libraries/tbl_columns_definition_form.inc.php';
```

 * tbl_column_definition_form.inc.phpを呼んでいるソースのpreg_repaceを使用している箇所

```bash
$ grep -n 'preg_replace' libraries/structure.lib.php
1457:    $create_view = preg_replace('@^CREATE@', 'ALTER', $create_view);
$ grep -n 'preg_replace' tbl_create.php
122:    $sql_query = preg_replace('@, $@', '', $sql_query);
136:    $primary = preg_replace('@, $@', '', $primary);
154:    $index = preg_replace('@, $@', '', $index);
172:    $unique = preg_replace('@, $@', '', $unique);
190:    $fulltext = preg_replace('@, $@', '', $fulltext);
```

## 情報源

 * [CERT](https://www.kb.cert.org/vuls/byid?query=CVE-2016-5734&searchview=)
 * [Debian](https://security-tracker.debian.org/tracker/CVE-2016-5734)
 * [Github](https://github.com/search?q="CVE-2016-5734")
 * [LWN](https://lwn.net/Search/DoSearch?words=CVE-2016-5734)
 * [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5734)
 * [PacketStorm](https://packetstormsecurity.com/search/?q=CVE-2016-5734)
 * [Redhat](https://access.redhat.com/security/cve/CVE-2016-5734)
 * [Ubuntu](https://people.canonical.com/~ubuntu-security/cve/CVE-2016-5734.html)
 * [bugtraq](https://marc.info/?s=CVE-2016-5734&l=bugtraq)
 * [exploitdb](https://www.exploit-db.com/search/?action=search&cve=2016-5734)
 * [fulldisc](https://marc.info/?s=CVE-2016-5734&l=full-disclosure)
 * [metasploit](https://www.rapid7.com/db/search?q=CVE-2016-5734)
 * [oss-sec](https://marc.info/?s=CVE-2016-5734&l=oss-security)


